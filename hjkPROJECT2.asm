ORG	8000H
COLGREEN	EQU	0FFC5H
COLRED		EQU	0FFC6H
ROW		EQU	0FFC7H
SEGMENT		EQU	0FFC1H		;8BIT
DATAOUT		EQU	0FFF0H
DATAIN		EQU	0FFF1H
SNAKECOL	EQU	30H
SNAKEROW	EQU	31H
FEEDCOL		EQU	32H
FEEDROW		EQU	33H
SCORE		EQU	34H
TIMEVALUE	EQU	35H
SECOND		EQU	36H
LIFE		EQU	37H

;R0 : FINDKEYCODE
;R1 : FINDKEYCODE
;R2 : FINDKEYCODE
;R3 :
;R4
;R5
;R6 :
;R7 : TL RANDOM NUMBER

;==========FUNCTION KEY
RWKEY	EQU	10H
COMMA	EQU	11H
PERIOD	EQU	12H
GO	EQU	13H
REG	EQU	14H
CD	EQU	15H
INCR	EQU	16H
ST	EQU	17H
RST	EQU	18H

;==========LCD VARIABLES
LCDWIR	EQU	0FFE0H
LCDWDR	EQU	0FFE1H
LCDRIR	EQU	0FFE2H
LCDRDR	EQU	0FFE3H

INST	EQU	20H
DATA	EQU	21H
LROW	EQU	22H; LCD ROW1,2
LCOL	EQU	23H; LCD COL0~
NUMFONT	EQU	24H; MESSAGE NUMBER
FDPL	EQU	25H
FDPH	EQU	26H

;=========LCD INSTRUCTIONS
CLEAR	EQU	01H
CUR_HOME	EQU	02H	;MOVE CURSOR HOME
ENTRY2	EQU	06H		;CURSOR DIRECION, ADDRESS+1,CURSOR RIGHT

DCB6	EQU	0EH		;CURSOR ON, BLINK OFF
FUN5	EQU	38H		

LINE_1	EQU	80H
LINE_2	EQU	0C0H

;============LCD SAVE
BPOR	EQU	2CH
BPOR2	EQU	2DH
BPOR3	EQU	2EH

;============KEY SAVE
VBUF	EQU	40H
CKOV	EQU	41H	;GAMEOVER여부
BPOV	EQU	42H

;============DELAY SAVE
DS1	EQU	4AH
DS2	EQU	4BH
DS3	EQU	4CH

;============DIRECT SAVE
DIRECT1	EQU	4DH

;INITIALIZING LCD
LCD_INIT:	MOV	INST,#FUN5
		CALL	INSTWR
		MOV	INST,#DCB6
		CALL	INSTWR
		MOV	INST,#CLEAR
		CALL	INSTWR
		MOV	INST,#ENTRY2
		CALL	INSTWR

		MOV	TMOD,#00000001B
		SETB	TCON.TR0
		MOV	R3,#2	
		JMP	START

DEC_R3:		DEC	R3
		MOV	A,R3
		INC	A
		JZ	REFILL_R3

START:		MOV	A,R3
		MOV	R4,A
		MOV	LROW,#01H
		MOV	LCOL,R4
		CALL	CUR_MOV

		MOV	DPTR,#MESSAGE1
		MOV	FDPL,DPL
		MOV	FDPH,DPH
		MOV	NUMFONT,#0DH
		CALL	DISFONT
		
		MOV	LROW,#02H
		MOV	LCOL,R4
		CALL	CUR_MOV
	
		MOV	DPTR,#MESSAGE2
		MOV	FDPL,DPL
		MOV	FDPH,DPH
		MOV	NUMFONT,#0DH
		CALL	DISFONT
		CALL	DELAY

		MOV	INST,#CLEAR
		CALL	INSTWR

		CALL	FINDKEYCODE
	
		CJNE	A,#00H,GAME_START
		JMP	DEC_R3
REFILL_R3:	MOV	R3,#20
		JMP	DEC_R3

GAME_START:
	MOV	SCORE,#00H
	CALL	BCD			;SCORE INIT
	MOV	SECOND,#0
	MOV	TIMEVALUE,#14	
	MOV	LIFE,#11111000B
	CLR	TCON.TR0
	MOV	IE,#10000010B
	MOV	TH0,#00H
	MOV	TL0,#00H		;TIMER INIT

RESTART:	
	MOV	CKOV,#0
	MOV	A,#00000000B
	MOV	DPTR,#ROW
	MOVX	@DPTR,A
	MOV	DPTR,#COLGREEN
	MOVX	@DPTR,A
	MOV	DPTR,#COLRED
	MOVX	@DPTR,A		;DOT MATRIX INIT


	MOV	A,LIFE
	MOV	P1,A			
	
	MOV	SNAKEROW,#00001000B
	MOV	SNAKECOL,#00001000B
	MOV	FEEDROW,#00000001B
	MOV	FEEDCOL,#00000001B
	CALL	RESETFEED		; SNAKE,FEED PLACE INIT
	MOV	DIRECT1,#01		; DIRECTION INIT
	SETB	TCON.TR0
MAIN:
	CALL	DISPSNAKE
	CALL	DELAY
	CALL	DIRECT
	CALL	DISPFEED
	MOV	A,CKOV
	JNZ	GAME_OVER
	CALL	DELAY
	CALL	DIRECT
	JMP	MAIN
GAME_OVER:
	CLR	TCON.TR0
	MOV	A,LIFE
	SETB	C
	RRC	A
	MOV	LIFE,A
	CJNE	A,#11111111B,RESTART
	
	MOV	R4,#00
	MOV	LROW,#01
	MOV	LCOL,R4
	CALL	CUR_MOV
	
	MOV	DPTR,#MESSAGE4
	MOV	FDPL,DPL
	MOV	FDPH,DPH		
	MOV	NUMFONT,#09H
	CALL	DISFONT
LOOP:	CALL	FINDKEYCODE
	JZ	LOOP
	CALL	DELAY
	JMP	START
	
;======SUBROUTINE:DIRECT
DIRECT:	CALL	FINDKEYCODE
SEL4:	CJNE	A,#04H,SEL1
	MOV	DIRECT1,#10
	RET
SEL1:	CJNE	A,#01H,SEL6
	MOV	DIRECT1,#00
	RET
SEL6:	CJNE	A,#06H,SEL9
	MOV	DIRECT1,#01
	RET
SEL9:	CJNE	A,#09H,NSEL
	MOV	DIRECT1,#11
NSEL:	RET

;=======SUBROUTINE MOVER
MOVER:	MOV	A,DIRECT1
	CLR	C
D_MOVE:	CJNE	A,#00,U_MOVE
	MOV	A,SNAKEROW
	RLC	A
	JC	GAME_SET
	MOV	SNAKEROW,A
	RET
U_MOVE:	CJNE	A,#11,L_MOVE
	MOV	A,SNAKEROW
	RRC	A
	JC	GAME_SET
	MOV	SNAKEROW,A
	RET
L_MOVE:	CJNE	A,#10,R_MOVE
	MOV	A,SNAKECOL
	RRC	A
	JC	GAME_SET
	MOV	SNAKECOL,A
	RET
R_MOVE:	MOV	A,SNAKECOL
	CLR	C
	RLC	A
	JC	GAME_SET
	MOV	SNAKECOL,A
	RET
GAME_SET:
	MOV	CKOV,#1
	RET
	

;======SUBROUTINE CUR_MOV
CUR_MOV:
	MOV	A,LROW
	CJNE	A,#01H,NEXT
	MOV	A,#LINE_1
	ADD	A,LCOL
	MOV	INST,A
	CALL	INSTWR
	JMP	RET_POINT
NEXT:	CJNE	A,#02H,RET_POINT
	MOV	A,#LINE_2
	ADD	A,LCOL
	MOV	INST,A
	CALL	INSTWR
RET_POINT:	RET

;=========SUBROUTINE DISFONT
DISFONT:	MOV	R5,#00H
FLOOP3:	MOV	A,R4
	ADD	A,R5
	CJNE	A,#20,FLOOP
	MOV	LCOL,#00H
	CALL	CUR_MOV
FLOOP2:	MOV	DPL,FDPL
	MOV	DPH,FDPH
	MOV	A,R5
	MOVC	A,@A+DPTR
	MOV	DATA,A
	CALL	DATAWR
	INC	R5
	MOV	A,R5
	CJNE	A,NUMFONT,FLOOP2
	RET
FLOOP:	MOV	DPL,FDPL
	MOV	DPH,FDPH
	MOV	A,R5
	MOVC	A,@A+DPTR
	MOV	DATA,A

	CALL	DATAWR
	INC	R5
	MOV	A,R5
	CJNE	A,NUMFONT,FLOOP3
	RET

;==========SUBROUTINE DATAWR
DATAWR:	CALL	INSTRD
	MOV	DPTR,#LCDWDR
	MOV	A,DATA
	MOVX	@DPTR,A
	RET
;=-========SUBROUTINE INSTWR
INSTWR:	CALL	INSTRD
	MOV	DPTR,#LCDWIR
	MOV	A,INST
	MOVX	@DPTR,A
	RET
;==========SUBROUTINE INSTRD
INSTRD:	MOV	DPTR,#LCDRIR
	MOVX	A,@DPTR
	JB	ACC.7,INSTRD
	RET
;=========DEFINE MESSAGE
MESSAGE1:
	DB	'P','r','e','s','s'
	DB	' ','A','n','y',' '
	DB	'K','e','y'
MESSAGE2:
	DB	't','o',' ','S','t'
	DB	'a','r','t',' ',' '
	DB	' ',' ',' '
MESSAGE3:
	DB	'P',' ','A',' ','U'
	DB	' ','S',' ','E'
MESSAGE4:
	DB	'G','a','m','e',' '
	DB	'O','v','e','r'

NUM:	DB	'0','1','2','3','4'
	DB	'5','6','7','8','9'

;===========SUBROUTINE FINDKEYCODE
FINDKEYCODE:
	MOV	R1,#00H
	MOV	A,#11101111B
	SETB	C
COLSCAN:
	MOV	R0,A
	INC	R1
	CALL	SUBKEY
	ANL	A,#00011111B
	XRL	A,#00011111B
	JNZ	RSCAN
	MOV	A,R0
	SETB	C
	RRC	A
	JNC	RET_0		;입력이 없으면 A에 0 저장
STARTING:	JMP	COLSCAN
RSCAN:	MOV	R2,#00H
	MOV	R7,TL0		;USE R7 AS RANDOM NUMBER
ROWSCAN:
	RRC	A
	JC	MATRIX
	INC	R2
	JMP	ROWSCAN

RET_0:	MOV	A,#0
	RET

MATRIX:	MOV	A,R2
	MOV	B,#05H
	MUL	AB
	ADD	A,R1
	CALL	INDEX
	RET			;A에 KEY에 해당하는 값이 저장돼있다.
;==========SUBROUTINE SUBKEY
SUBKEY:	MOV	DPTR,#DATAOUT
	MOVX	@DPTR,A
	MOV	DPTR,#DATAIN
	MOVX	A,@DPTR
	RET
;==========SUBROUTINE INDEX
INDEX:	MOVC	A,@A+PC
	RET
KEYBASE:
	DB	ST
	DB	INCR
	DB	CD
	DB	REG
	DB	GO
	DB	0CH
	DB	0DH
	DB	0EH
	DB	0FH
	DB	COMMA
	DB	08H
	DB	09H
	DB	0AH
	DB	0BH
	DB	PERIOD
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	RWKEY
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	RST

SCOREADD:
	INC	SCORE
	MOV	A,SCORE
	CJNE	A,#64H,BCD
	MOV	SCORE,#00H
	JMP	BCD
	
CHECKPLACE:
	MOV	A,CKOV
	JNZ	GOAHEAD
	MOV	A,SNAKECOL
	CJNE	A,FEEDCOL,GOAHEAD
	MOV	A,SNAKEROW
	CJNE	A,FEEDROW,GOAHEAD
	CALL	SCOREADD	; GET FEED -> SCORE+1
	CALL	RESETFEED	; NEW FEEDCOL,FEEDROW SET
GOAHEAD: RET


DISPSNAKE:
	MOV	DPTR,#ROW
	MOV	A,SNAKEROW
	MOVX	@DPTR,A

	MOV	DPTR,#COLGREEN
	MOV	A,SNAKECOL
	MOVX	@DPTR,A
	
	MOV	DPTR,#COLRED
	MOV	A,#00000000B
	MOVX	@DPTR,A
	RET
DISPFEED:
	MOV	DPTR,#ROW
	MOV	A,FEEDROW
	MOVX	@DPTR,A

	MOV	DPTR,#COLRED
	MOV	A,FEEDCOL
	MOVX	@DPTR,A

	MOV	DPTR,#COLGREEN
	MOV	A,#00000000B
	MOVX	@DPTR,A
	RET

BCD:	MOV	BPOR,R0
	MOV	A,SCORE
	MOV	B,#10
	DIV	AB
	SWAP	A
	MOV	R0,B
	ORL	A,R0
	MOV	DPTR,#SEGMENT
	MOVX	@DPTR,A
	MOV	R0,BPOR
	RET

RESETFEED:
	MOV	A,R7
	MOV	B,#3
	MUL	AB
	MOV	B,#16
	DIV	AB
	MOV	R3,A
	MOV	A,FEEDCOL
COLROT:	RL	A
	DJNZ	R3,COLROT
	MOV	FEEDCOL,A
	MOV	R3,B
	MOV	A,FEEDROW
ROWROT:	RL	A
	DJNZ	R3,ROWROT
	MOV	FEEDROW,A
	RET
	
DELAY:	MOV	BPOR,R5
	MOV	BPOR2,R6
	MOV	R5,#0FFH
DELAY1:	MOV	R6,#0FFH
DELAY2:	DJNZ	R6,DELAY2
	DJNZ	R5,DELAY1
	MOV	R6,BPOR2
	MOV	R5,BPOR
	RET

SERVICE:
	CLR	TCON.TR0
	PUSH	A
	DJNZ	TIMEVALUE,SERRET
	MOV	TIMEVALUE,#14
	INC	SECOND
	CALL	MOVER
	CALL	CHECKPLACE
SERRET:	MOV	TH0,#00H
	MOV	TL0,#00H
	POP	A
	SETB	TCON.TR0
	RETI

ORG	000BH
JMP	SERVICE
END